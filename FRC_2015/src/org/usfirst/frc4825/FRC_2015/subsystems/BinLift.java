// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc4825.FRC_2015.subsystems;

import org.usfirst.frc4825.FRC_2015.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 * January 31st 2015 Jonathan Chow
 */
public class BinLift extends Subsystem {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController motor = RobotMap.binLiftMotor;
	DigitalInput lowerSwitch = RobotMap.binLiftBottomSwitch;
	DigitalInput upperSwitch = RobotMap.binLiftUpperSwitch;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	private double stopSpeed;

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	@Override
	public void initDefaultCommand() {

		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		stopSpeed = 0.1;
		stopBin();
		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}

	public void raiseBin() { //Moves the lift up
		if (upperSwitch.get() == true) //Checks if the arms are not at the top
			motor.set(1.0); //Moves lift up
		else //Arms are at the top
			stopBin(); //Stop arm movement
	}

	public void lowerBin() { //Moves the lift down
		if (lowerSwitch.get() == true) //Checks if the arms are not at the bottom
			motor.set(-0.5); //Moves lift down
		else //Arms are at the bottom
			stopBin(); //Stop arm movement
	}

	public void stopBin() { //Stop motor movement
		motor.set(stopSpeed);
	}

	public boolean getUpperSwitch() { //Gets the switch data to determine the position of the arms
		return upperSwitch.get();
	}

	public boolean getBottomSwitch() { //Gets the switch data to determine the position of the arms
		return lowerSwitch.get();
	}
}
