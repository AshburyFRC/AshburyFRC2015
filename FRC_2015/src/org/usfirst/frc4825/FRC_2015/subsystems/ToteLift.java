// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc4825.FRC_2015.subsystems;

import org.usfirst.frc4825.FRC_2015.RobotMap;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * January 31st 2015 Jonathan Chow
 */
public class ToteLift extends Subsystem {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController motor = RobotMap.toteLiftMotor;
	DigitalInput bottomSwitch = RobotMap.toteLiftBottomSwitch;
	DigitalInput upperSwitch = RobotMap.toteLiftUpperSwitch;
	DigitalInput middleSwitch = RobotMap.toteLiftMiddleSwitch;
	Solenoid solenoid = RobotMap.toteSolenoid;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	private double stopSpeed;

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	@Override
	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
		stopSpeed = 0.0;
		solOn();
		stopTote();
		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}

	public void raiseTote() { //Moves the lift up
		if (upperSwitch.get() == true){ //Checks if the arms are not at the top
			solOff();
			motor.set(1.0); //Moves lift up
		}
		else{ //Arms are at the top
			solOn();
			stopTote(); //Stop arm movement
		}
	}

	public void lowerTote() { //Moves the lift down
		if (bottomSwitch.get() == true){ //Moves the lift down
			solOff();
			motor.set(-0.5); //Moves lift down
		}
		else{ //Arms are at the bottom
			solOn();
			stopTote(); //Stop arm movement
		}
	}

	public void stopTote() { //Stop motor movement
		motor.set(stopSpeed);
	}

	public boolean getUpperSwitch() { //Gets the switch data to determine the position of the arms
		return upperSwitch.get();
	}

	public boolean getBottomSwitch() { //Gets the switch data to determine the position of the arms
		return bottomSwitch.get();
	}

	public boolean getMiddleSwitch() { //Gets the switch data to determine the position of the arms
		return middleSwitch.get();
	}
	
	private void solOn(){
		if (solenoid.get() == false)
			solenoid.set(true);
	}
	
	private void solOff(){
		if (solenoid.get() == true)
			solenoid.set(false);
	}
	
	public void toggleStopSpeed(){
		if (stopSpeed == 0.0){
			stopSpeed = 0.15;
			motor.set(stopSpeed);
			SmartDashboard.putString("Tote Stabilizer:", "Enabled");
		}
		else if (stopSpeed == 0.15){
			stopSpeed = 0.0;
			motor.set(stopSpeed);
			SmartDashboard.putString("Tote Stabilizer:", "Disabled");
		}
	}
}
